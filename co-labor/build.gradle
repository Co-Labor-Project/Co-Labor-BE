plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'pelican'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//CHAT
	implementation 'org.springframework.boot:spring-boot-starter-json'

	implementation 'org.deeplearning4j:deeplearning4j-nlp:1.0.0-beta7'
	implementation 'org.nd4j:nd4j-native-platform:1.0.0-beta7'

	//테이블 초기화 관련 JDBC 사용
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	//implementation 'org.json:json:20210307'

	implementation 'com.opencsv:opencsv:5.5.2'
	implementation 'commons-fileupload:commons-fileupload:1.4'
	//implementation 'org.apache.commons:commons-fileupload:1.4'
	implementation 'org.json:json:20230618'

	// Added for HttpHeaders, HttpEntity
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// Added for @Transactional
	implementation 'javax.transaction:javax.transaction-api:1.3'

	// Hugging Face Transformers 의존성
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	//implementation 'org.slf4j:slf4j-api:1.7.30'
	implementation 'org.json:json:20210307'

	//@PostConstruct 애노테이션을 사용
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Session
	implementation 'org.springframework.session:spring-session-jdbc'

	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter'


	// 엘라스틱서치 의존성 추가
	implementation 'co.elastic.clients:elasticsearch-java:8.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
	implementation 'jakarta.json:jakarta.json-api:2.0.1'

	// Spring ai 의존성 추가
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:0.8.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// BCrypt 의존성 추가
	implementation 'org.mindrot:jbcrypt:0.4'


}



tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:unchecked"
}

